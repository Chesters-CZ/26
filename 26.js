let map1 = [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
    [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,2,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
];

let map2 = [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,3,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1],
    [1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,1],
    [1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,1],
    [1,0,0,0,1,0,1,1,0,1,0,1,0,0,0,1,0,1,0,1,1,0,1,0,1],
    [1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0,1],
    [1,0,0,0,1,0,1,1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,1],
    [1,0,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1],
    [1,0,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1],
    [1,0,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1],
    [1,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],
    [1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1],
    [1,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,1],
    [1,0,1,0,1,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,1,1,0,1],
    [1,0,1,0,0,0,1,1,0,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,1],
    [1,0,1,1,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1],
    [1,0,0,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1],
    [1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1],
    [1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1],
    [1,0,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1],
    [1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,2,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
];

let map3 = [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,3,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
    [1,1,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,0,1,0,1,1],
    [1,0,0,1,0,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,0,0,1],
    [1,0,1,1,0,1,1,0,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,1,1],
    [1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,1],
    [1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,1,0,1,0,1],
    [1,0,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1],
    [1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1],
    [1,1,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1],
    [1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1],
    [1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1],
    [1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,1],
    [1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,1,1,1,1,0,1,0,1],
    [1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1],
    [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,1],
    [1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,0,1],
    [1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,1,0,1],
    [1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,0,0,1],
    [1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1],
    [1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1],
    [1,0,1,1,1,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,1,0,1,1],
    [1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,2,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
];

let map4 = [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1],
    [1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
    [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
    [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
    [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
    [1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,0,0,1],
    [1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0,0,1],
    [1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,1],
    [1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1],
    [1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1],
    [1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1],
    [1,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1],
    [1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,1,0,1,0,1],
    [1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
];

let ppx = 1;
let ppy = 1;
let pp;
let crntmap = 0;

function muvdaon() {
    switch (crntmap) {
        case 1:
            pp = ppx;
            pp++;
            switch (map1[pp][ppy]) {
                case 0:
                    map1[ppx][ppy] = 0;
                    ppx++;
                    map1[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
        break;

        case 2:
            pp = ppx;
            pp++;
            switch (map2[pp][ppy]) {
                case 0:
                    map2[ppx][ppy] = 0;
                    ppx++;
                    map2[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
        break;

        case 3:
            pp = ppx;
            pp++;
            switch (map3[pp][ppy]) {
                case 0:
                    map3[ppx][ppy] = 0;
                    ppx++;
                    map3[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
        break;

        case 4:
            pp = ppx;
            pp++;
            switch (map4[pp][ppy]) {
                case 0:
                    map4[ppx][ppy] = 0;
                    ppx++;
                    map4[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
        break;
    }
}

function muvap() {
    switch (crntmap) {
        case 1:
            pp = ppx;
            pp--;
            switch (map1[pp][ppy]) {
                case 0:
                    map1[ppx][ppy] = 0;
                    ppx--;
                    map1[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 2:
            pp = ppx;
            pp--;
            switch (map2[pp][ppy]) {
                case 0:
                    map2[ppx][ppy] = 0;
                    ppx--;
                    map2[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 3:
            pp = ppx;
            pp--;
            switch (map3[pp][ppy]) {
                case 0:
                    map3[ppx][ppy] = 0;
                    ppx--;
                    map3[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 4:
            pp = ppx;
            pp--;
            switch (map4[pp][ppy]) {
                case 0:
                    map4[ppx][ppy] = 0;
                    ppx--;
                    map4[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;
    }
}

function muvrite() {
    switch (crntmap) {
        case 1:
            pp = ppy;
            pp--;
            switch (map1[ppx][pp]) {
                case 0:
                    map1[ppx][ppy] = 0;
                    ppy--;
                    map1[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 2:
            pp = ppy;
            pp--;
            switch (map2[ppx][pp]) {
                case 0:
                    map2[ppx][ppy] = 0;
                    ppy--;
                    map2[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 3:
            pp = ppy;
            pp--;
            switch (map3[ppx][pp]) {
                case 0:
                    map3[ppx][ppy] = 0;
                    ppy--;
                    map3[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 4:
            pp = ppy;
            pp--;
            switch (map4[ppx][pp]) {
                case 0:
                    map4[ppx][ppy] = 0;
                    ppy--;
                    map4[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;
    }
}

function muvritent() {
    switch (crntmap) {
        case 1:
            pp = ppy;
            pp++;
            switch (map1[ppx][pp]) {
                case 0:
                    map1[ppx][ppy] = 0;
                    ppy++;
                    map1[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 2:
            pp = ppy;
            pp++;
            switch (map2[ppx][pp]) {
                case 0:
                    map2[ppx][ppy] = 0;
                    ppy++;
                    map2[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 3:
            pp = ppy;
            pp++;
            switch (map3[ppx][pp]) {
                case 0:
                    map3[ppx][ppy] = 0;
                    ppy++;
                    map3[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;

        case 4:
            pp = ppy;
            pp++;
            switch (map4[ppx][pp]) {
                case 0:
                    map4[ppx][ppy] = 0;
                    ppy++;
                    map4[ppx][ppy] = 3;
                    rendrmap();
                    break;

                case 1:
                    break;
                case 2:
                    nekstmap();
                    break;
            }
            break;
    }
}

function rendrrmap() {
    crntmap = 1;
    map1 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],Imgur: The magic of the Internet
    imgur.com
    Pin on • Tumblr •
pinterest.com
    My Child Can Safely Ram Her Fucking ...
    me.me
    my child can safely ram her fucking ...
    ifunny.co
    Pin on tumblr/twitter shit
    pinterest.at
    Finally My Child Can Safely Ram ...
    me.me
    Finally my child can safely ram her ...
    m.9gag.com
    my child can safely ram her fucking ...
    ifunny.co
    My Child Can Safely Ram Her Fucking ...
    me.me
    My Child Can Safely Ram Her Fucking ...
    me.me
    Finally My Child Can Safely Ram ...
    me.me
    Finally My Child Can Safely Ram ...
    esmemes.com
    My Child Can Safely Ram Her Fucking ...
    ballmemes.com
    Finally my child can safely ram her ...
    twitter.com
    my child can safely ram her fucking ...
    ifunny.co
    Pm Optus Cableclips Follow Before After ...
    awwmemes.com
    Be Alive ...
    loveforquotes.com

        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
        [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,2,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    ];

    map2 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,3,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1],
        [1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,1],
        [1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,1],
        [1,0,0,0,1,0,1,1,0,1,0,1,0,0,0,1,0,1,0,1,1,0,1,0,1],
        [1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0,1],
        [1,0,0,0,1,0,1,1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,1],
        [1,0,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1],
        [1,0,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1],
        [1,0,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1],
        [1,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],
        [1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1],
        [1,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,1],
        [1,0,1,0,1,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,1,1,0,1],
        [1,0,1,0,0,0,1,1,0,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,1],
        [1,0,1,1,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1],
        [1,0,0,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1],
        [1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1],
        [1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1],
        [1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1],
        [1,0,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1],
        [1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,2,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    ];

    map3 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,3,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
        [1,1,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,0,1,0,1,1],
        [1,0,0,1,0,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,0,0,1],
        [1,0,1,1,0,1,1,0,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,1,1],
        [1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,1],
        [1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,1,0,1,0,1],
        [1,0,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1],
        [1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1],
        [1,1,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1],
        [1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1],
        [1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1],
        [1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,1],
        [1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,1,1,1,1,0,1,0,1],
        [1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1],
        [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,1],
        [1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,0,1],
        [1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,1,0,1],
        [1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,0,0,1],
        [1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1],
        [1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1],
        [1,0,1,1,1,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,1,0,1,1],
        [1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,2,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    ];

    map4 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1],
        [1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
        [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
        [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
        [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1],
        [1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,0,0,1],
        [1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0,0,1],
        [1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,1],
        [1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1],
        [1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1],
        [1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1],
        [1,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1],
        [1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,1,0,1,0,1],
        [1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,1],
        [1,0,1,0,1,0,1,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    ];
    rendrmap();
}

function nekstmap() {
    ppx=1;
    ppy=1;
    crntmap++;
    rendrmap();

}

function rendrmap() {
    let onen = document.getElementById("teblslot");



   while (onen.childElementCount > 0) {
       onen.removeChild(onen.childNodes[0])
   }

   switch (crntmap) {
       case 1:
           onen.appendChild(makeTable(map1));
           break;

       case 2:
           onen.appendChild(makeTable(map2));
           break;

       case 3:
           onen.appendChild(makeTable(map3));
           break;

       case 4:
           onen.appendChild(makeTable(map4));
           break;
   }

}

function makeTable(array) {
    let iks;
    let jinyiks;
    let table = document.createElement('table');
    let row;
    let cell;
    let j;
    let i;
    let MEIIIIIN = " ";
    for (i = 0; i < array.length; i++) {
        row = document.createElement('tr');
        for (j = 0; j < array[i].length; j++) {
            cell = document.createElement('td');
            iks = document.createElement("img");
            switch (array[i][j]) {
                case 1:
                    iks.src = "00.png";
                    jinyiks = true;
                    break;
                case 2:
                    iks.src = "stairs_32x32_EVEN EVEN MOAR SHADOW.png";
                    jinyiks = true;
                    break;
                case 3:
                    iks.src = "logo.png";
                    jinyiks = true;
                    break;
                case 0:
                    jinyiks = false;

            }
            iks.width = 30;
            iks.height = 30;

            if (jinyiks) {
                cell.appendChild(iks);
            }
            else {
                cell.innerHTML = MEIIIIIN;
            }

            row.appendChild(cell);
        }
        table.appendChild(row);
    }



    return table;
}